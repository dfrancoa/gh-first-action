name: Create CE tenant push

on:
  push:
    paths:
      - .github/workflows/sa_workflow_daniel_v4.yml

#on:
#  workflow_dispatch:
#    inputs:
#      branch-name:
#        description: "Branch where you will create the CE tenant"
#        required: true
#      tenant-name:
#        description: 'Name of the tenant'
#        required: true
#      organization:
#        description: 'Organization identifier'
#        required: true
#      jwks-file:
#        description: 'content of jwks-json file'
#        required: true




jobs:
  create-tenant:
    runs-on: ubuntu-latest
    env:
      branch-name: "feature/testpush1"
      tenant-name: "saidp-devops30"
      organization: "devops30"
      jwks-file: "{  \"kty\": \"RSA\",   \"use\": \"sig\",   \"alg\": \"RS256\",   \"kid\": \"1ed5eb26-e507-42f0-8ee9-ea9db16d6c52\",   \"n\": \"uv53piwbya1Ns0bBGbe8g-OeaD1TgHi0nXn4AwooKKtlsJJLMDb7h6zVRc_v513yESIpla65rHMYaB3bdI8o7dt2Q9sUlnGaVrIy9fzQnazpO3UyXCGr97hjLXLHuwgkjktfnhWUslx0Iqd29M5Len_8Y-71e1ahDFhFNfLTx3HDgCFrWtLS9eF9VgQmnLJRHvmXuX64RHAcufPGNHoTlsWEiBb-9-q8-boZUxkckHRIrZib-VDA4xnFvTymhKcneICKJO59iaYuvgKGzE63bBv82RaRiEgND01IwhszubyxxtTQYH8xhBJ81qq3TgJg27qgwlNrEVlWH7CqKt77Pw\\\",   \"e\": \"AQAB\" }"

    steps:
      # Making sure all variables are entered
      - name: Fail if branch is empty
        if: ${{ $branch-name == '' || branch-name == null }}
        run: |
          echo "Error: Branch name is required, can't be empty!" >&2
          exit 1

      - name: Fail if tenant name is empty
        if: ${{ tenant-name == '' || tenant-name  == null }}
        run: |
          echo "Error: Tenant name is required, can't be empty!" >&2
          exit 1

      - name: Fail if organization name is empty
        if: ${{ organization == '' || organization  == null }}
        run: |
          echo "Error: Organization is required, can't be empty!" >&2
          exit 1

      - name: Fail if jwks key is empty
        if: ${{ jwks-file == '' || jwks-file  == null }}
        run: |
          echo "Error: JWKS key information is required, can't be empty!" >&2
          exit 1

      # Checking out main branch to start working from it    
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main                       # Start from main on CE the main branch is called master
          fetch-depth: 0                  # Important! Ensures full history for comparison

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # Create new branch
      - name: Create a new branch
        run: |
          BRANCH_NAME="$branch-name"
          git checkout -b "$BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      # Making changes to the new branch
      - name: Update main kustomization.yaml
        run: |
          KUSTOMIZATION_PATH="apps/acp-sa-import/overlays/prod/us-east-1/kustomization.yaml"
          if [ -f "$KUSTOMIZATION_PATH" ]; then
            sed -i "/..base/a \ \ - $organization" "$KUSTOMIZATION_PATH"
            echo "Updated $KUSTOMIZATION_PATH"
          else
            echo "Error: $KUSTOMIZATION_PATH does not exist"
            exit 1
          fi

      - name: Create organization directory
        run: |
          ORG_DIR="apps/acp-sa-import/overlays/prod/us-east-1/$organization"
          mkdir -p "$ORG_DIR"
          echo "Created directory: $ORG_DIR"

      - name: Create JWKS file
        run: |
          JWKS_FILE="apps/acp-sa-import/overlays/prod/us-east-1/$organization/jwks.json"
          echo -e 'jwks-file' > "$JWKS_FILE"
          cat "$JWKS_FILE"
          sed -i '1s/^\(.\)/\1\n/' "$JWKS_FILE"
          sed -i 's/,/&\n/g' "$JWKS_FILE"
          sed -i 's/}/\n}/' "$JWKS_FILE"
          cat "$JWKS_FILE"

      - name: Create organization kustomization file
        run: |
          ORG_KUSTOMIZATION="apps/acp-sa-import/overlays/prod/us-east-1/$organization/kustomization.yaml"
          cat > "$ORG_KUSTOMIZATION" << EOF
          apiVersion: kustomize.config.k8s.io/v1beta1
          kind: Kustomization
          namespace: acp-sa-import
          nameSuffix: -$organization
          resources:
            - ../../../../base/job.yaml
          configMapGenerator:
            - name: envs
              literals:
                - TENANT_ID=$tenant-name
                - ORGANIZATION=$organization
              files:
                - JWKS_KEYS=jwks.json
                - CA=../saidp-intermediate-cas.pem
          EOF
          echo "Created kustomization file: $ORG_KUSTOMIZATION"

      - name: Make a change
        run: |
          echo "Updated at $(date)" >> update.log    

      - name: Push branch
        run: |
          git push origin HEAD:$BRANCH_NAME

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          source: ${{ env.BRANCH_NAME }}
          target: main
          title: "Automated PR from GitHub Actions"
          body: "This PR was created automatically."
